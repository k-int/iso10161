// https://docs.gradle.org/current/userguide/tutorial_java_projects.html
import com.k_int.codec.comp.runParser;

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'groovy'

buildscript {
  repositories {
    mavenCentral()
    mavenLocal()
    maven {
      url 'http://nexus.k-int.com/content/repositories/releases'
    }
  }
  dependencies {
    classpath group: 'com.k_int', name: 'A2J', version: '1.0.2'
  }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
      url 'http://nexus.k-int.com/content/repositories/releases'
    }
}

dependencies {
  compile group: 'log4j', name: 'log4j', version: '1.2.5'
  compile group: 'com.k_int', name: 'A2J', version: '1.0.2'
  compile group: 'org.codehaus.groovy', name:'groovy-all', version:'2.4.10'
  testCompile 'junit:junit:4.12'
  testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'
}


def generatedSrcDir = new File(buildDir, "generated/src/main/java/")

group = 'com.k_int'
sourceCompatibility = 1.8
version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version
    }
}

task compileASN() {
  doLast() {
    System.out.println("complileASN() "+System.getProperty("CodecBasePackage"));

    if( !generatedSrcDir.exists() ) {
      // Create all folders up-to and including B
      generatedSrcDir.mkdirs()
    }

    String[] args = ['./ill9702.asn'];
    System.setProperty("CodecBasePackage", "com.k_int.iso10161");
    runParser.main(args);
  }
}

// See https://docs.gradle.org/current/userguide/maven_plugin.html#uploading_to_maven_repositories
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "http://nexus.k-int.com/content/repositories/releases/") {
                def usr = project.hasProperty('knowintNexusUser') ? knowintNexusUser :''
                def pass = project.hasProperty('knowintNexusPass') ? knowintNexusPass :'' 
                authentication(userName: usr, password: pass)
            }
        }
    }
}


test {
    systemProperties 'logback.configurationFile' : new File(projectDir,'src/test/resources/logback-test.xml').absolutePath
    testLogging {
        outputs.upToDateWhen {false}
        showStandardStreams = true
    }
}

